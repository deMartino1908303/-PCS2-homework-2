#THIS IS THE MERGE SORT FROM SLACK
def merge(my_left, my_right):
    result = []
    pos_left = 0
    pos_right = 0
    
    while pos_left < len(my_left) and pos_right < len(my_right):
        if my_left[pos_left] < my_right[pos_right]:
            result.append(my_left[pos_left])
            pos_left += 1
        else:
            result.append(my_right[pos_right])
            pos_right += 1
            
    while pos_left < len(my_left):
        result.append(my_left[pos_left])
        pos_left += 1
    
    while pos_right < len(my_right):
        result.append(my_right[pos_right])
        pos_right += 1
        
    return result

def merge_sort(lst):
    if len(lst) == 1:
        return lst
    
    left = lst[0:len(lst)//2]
    right = lst[len(lst)//2:]
    
    left = merge_sort(left)
    right = merge_sort(right)
    
    return merge(left, right)
--------------------------------------------------------##THIS IS THE PROGRAM I WROTE
def closestNumbers(arr):
    arr = merge_sort(arr)
    difference = 9999
    lowst_diff_numb = []
    for count1 in range (len(arr)-1):
        n_c1 = arr[count1]
        c_c2 = arr[count1+1]
        if abs(n_c1 - c_c2) < difference:
            lowst_diff_numb.clear()
            lowst_diff_numb.append(n_c1)
            lowst_diff_numb.append(c_c2)
            difference = abs(n_c1-c_c2)
        
        elif abs(n_c1 - c_c2) == difference:
            lowst_diff_numb.append(n_c1)
            lowst_diff_numb.append(c_c2)
            
    return lowst_diff_numb
